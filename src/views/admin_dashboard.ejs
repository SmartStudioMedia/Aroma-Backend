<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AROMA Restaurant - Admin Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .header h1 {
            color: #2d3748;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .nav-tabs {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .nav-tab {
            padding: 12px 24px;
            background: #4f46e5;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .nav-tab:hover {
            background: #3730a3;
            transform: translateY(-2px);
        }
        
        .nav-tab.active {
            background: #059669;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .stat-card h3 {
            color: #4f46e5;
            font-size: 2rem;
            margin-bottom: 10px;
        }
        
        .stat-card p {
            color: #6b7280;
            font-size: 1.1rem;
        }
        
        .charts-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .chart-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .chart-container h3 {
            color: #2d3748;
            margin-bottom: 20px;
            font-size: 1.5rem;
        }
        
        .orders-table {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .orders-table h3 {
            color: #2d3748;
            margin-bottom: 20px;
            font-size: 1.5rem;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }
        
        th {
            background: #f9fafb;
            font-weight: 600;
            color: #374151;
        }
        
        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .status-pending {
            background: #fef3c7;
            color: #92400e;
        }
        
        .status-confirmed {
            background: #d1fae5;
            color: #065f46;
        }
        
        .status-completed {
            background: #dbeafe;
            color: #1e40af;
        }
        
        .status-cancelled {
            background: #fee2e2;
            color: #991b1b;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background: #4f46e5;
            color: white;
        }
        
        .btn-primary:hover {
            background: #3730a3;
        }
        
        .btn-success {
            background: #059669;
            color: white;
        }
        
        .btn-danger {
            background: #dc2626;
            color: white;
        }
        
        @media (max-width: 768px) {
            .charts-grid {
                grid-template-columns: 1fr;
            }
            
            .nav-tabs {
                flex-wrap: wrap;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üçî AROMA Restaurant Admin Dashboard</h1>
            <p>Professional restaurant management system</p>
            <div class="nav-tabs">
                <a href="/admin" class="nav-tab active">Dashboard</a>
                <a href="/admin/orders" class="nav-tab">Orders</a>
                <a href="/admin/items" class="nav-tab">Menu Items</a>
                <a href="/admin/categories" class="nav-tab">Categories</a>
                <a href="/admin/settings" class="nav-tab">Settings</a>
            </div>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <h3><%= stats.pending %></h3>
                <p>Pending Orders</p>
            </div>
            <div class="stat-card">
                <h3><%= stats.confirmed %></h3>
                <p>Confirmed Orders</p>
            </div>
            <div class="stat-card">
                <h3><%= stats.completed %></h3>
                <p>Completed Orders</p>
            </div>
            <div class="stat-card">
                <h3>‚Ç¨<%= stats.totalSales.toFixed(2) %></h3>
                <p>Total Sales</p>
            </div>
        </div>

        <div class="charts-grid">
            <div class="chart-container">
                <h3>Order Status Distribution</h3>
                <canvas id="statusChart"></canvas>
            </div>
            <div class="chart-container">
                <h3>Category Performance</h3>
                <canvas id="categoryChart"></canvas>
            </div>
        </div>

        <div class="orders-table">
            <h3>Recent Orders</h3>
            <table>
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Table</th>
                        <th>Items</th>
                        <th>Total</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% recentOrders.forEach(order => { %>
                    <tr>
                        <td>#<%= order.id %></td>
                        <td><%= order.customerName %></td>
                        <td><%= order.tableNumber || 'N/A' %></td>
                        <td><%= order.items.length %> items</td>
                        <td>‚Ç¨<%= (order.total || 0).toFixed(2) %></td>
                        <td>
                            <span class="status-badge status-<%= order.status %>">
                                <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                            </span>
                        </td>
                        <td>
                            <% if (order.status === 'pending') { %>
                                <button class="btn btn-success" onclick="updateOrderStatus(<%= order.id %>, 'confirmed')">Confirm</button>
                            <% } else if (order.status === 'confirmed') { %>
                                <button class="btn btn-primary" onclick="updateOrderStatus(<%= order.id %>, 'completed')">Complete</button>
                            <% } %>
                            <button class="btn btn-danger" onclick="updateOrderStatus(<%= order.id %>, 'cancelled')">Cancel</button>
                        </td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Order Status Chart
        const statusCtx = document.getElementById('statusChart').getContext('2d');
        new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Pending', 'Confirmed', 'Completed', 'Cancelled'],
                datasets: [{
                    data: [<%= stats.pending %>, <%= stats.confirmed %>, <%= stats.completed %>, <%= stats.cancelled %>],
                    backgroundColor: ['#f59e0b', '#10b981', '#3b82f6', '#ef4444']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Category Performance Chart
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        new Chart(categoryCtx, {
            type: 'bar',
            data: {
                labels: [<% Object.keys(categoryStats).forEach((cat, index) => { %>'<%= cat %>'<%= index < Object.keys(categoryStats).length - 1 ? ',' : '' %><% }); %>],
                datasets: [{
                    label: 'Revenue (‚Ç¨)',
                    data: [<% Object.values(categoryStats).forEach((stat, index) => { %>'<%= stat.revenue.toFixed(2) %>'<%= index < Object.values(categoryStats).length - 1 ? ',' : '' %><% }); %>],
                    backgroundColor: '#4f46e5'
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        function updateOrderStatus(orderId, status) {
            fetch(`/admin/orders/${orderId}/status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Failed to update order status');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating order status');
            });
        }
    </script>
</body>
</html>
