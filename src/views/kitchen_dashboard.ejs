<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AROMA Restaurant - Kitchen Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #ff6b6b 0%, #ffa500 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .header h1 {
            color: #2d3748;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .nav-tabs {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .nav-tab {
            padding: 12px 24px;
            background: #ff6b6b;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .nav-tab:hover {
            background: #ff5252;
            transform: translateY(-2px);
        }
        
        .nav-tab.active {
            background: #ffa500;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .stat-card h3 {
            color: #ff6b6b;
            font-size: 2rem;
            margin-bottom: 10px;
        }
        
        .stat-card p {
            color: #6b7280;
            font-size: 1.1rem;
        }
        
        .orders-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }
        
        .orders-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .orders-section h3 {
            color: #2d3748;
            margin-bottom: 20px;
            font-size: 1.5rem;
        }
        
        .order-card {
            background: #ffffff;
            border: 2px solid #000000;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 25px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
        }
        
        .order-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.25);
            border-color: #333333;
        }
        
        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .order-id {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2d3748;
        }
        
        .order-time {
            color: #6b7280;
            font-size: 0.9rem;
        }
        
        .order-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 15px;
        }
        
        .detail-item {
            background: white;
            padding: 8px 12px;
            border-radius: 6px;
            border: 1px solid #e5e7eb;
        }
        
        .detail-label {
            font-size: 0.8rem;
            color: #6b7280;
            text-transform: uppercase;
            font-weight: 500;
        }
        
        .detail-value {
            font-size: 0.9rem;
            color: #2d3748;
            font-weight: 500;
        }
        
        .order-items {
            margin-bottom: 15px;
        }
        
        .order-items h4 {
            color: #374151;
            margin-bottom: 10px;
        }
        
        /* Special Instructions / Notes - RED AND BOLD */
        .order-notes {
            background: #fee2e2;
            border: 2px solid #dc2626;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
        }
        
        .order-notes h4 {
            color: #dc2626;
            font-weight: 700;
            margin-bottom: 8px;
            font-size: 1.1rem;
        }
        
        .order-notes-content {
            color: #dc2626;
            font-weight: 700;
            font-size: 1rem;
            line-height: 1.5;
            white-space: pre-wrap;
            word-break: break-word;
        }
        
        .item-list {
            background: white;
            border-radius: 8px;
            padding: 15px;
            border: 1px solid #e5e7eb;
        }
        
        .item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #f3f4f6;
        }
        
        .item:last-child {
            border-bottom: none;
        }
        
        .item-name {
            font-weight: 500;
            color: #2d3748;
        }
        
        .item-qty {
            color: #6b7280;
        }
        
        .order-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            font-size: 0.9rem;
        }
        
        .btn-primary {
            background: #ff6b6b;
            color: white;
        }
        
        .btn-success {
            background: #10b981;
            color: white;
        }
        
        .btn-danger {
            background: #ef4444;
            color: white;
        }
        
        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .status-pending {
            background: #fef3c7;
            color: #92400e;
        }
        
        .status-confirmed {
            background: #d1fae5;
            color: #065f46;
        }
        
        @media (max-width: 768px) {
            .orders-grid {
                grid-template-columns: 1fr;
            }
            
            .order-details {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üë®‚Äçüç≥ Kitchen Dashboard</h1>
            <p>Kitchen staff order management system</p>
            <div class="nav-tabs">
                <a href="/kitchen" class="nav-tab active">Dashboard</a>
                <a href="/kitchen/orders" class="nav-tab">All Orders</a>
            </div>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <h3><%= pendingOrders.length %></h3>
                <p>Pending Orders</p>
            </div>
            <div class="stat-card">
                <h3><%= confirmedOrders.length %></h3>
                <p>Confirmed Orders</p>
            </div>
            <div class="stat-card">
                <h3><%= totalOrders %></h3>
                <p>Total Orders Today</p>
            </div>
        </div>

        <div class="orders-grid">
            <div class="orders-section">
                <h3>üïê Pending Orders</h3>
                <% if (pendingOrders.length === 0) { %>
                    <div style="text-align: center; padding: 40px; color: #6b7280;">
                        <h3>No pending orders</h3>
                        <p>New orders will appear here</p>
                    </div>
                <% } else { %>
                    <% pendingOrders.forEach(order => { %>
                    <div class="order-card">
                        <div class="order-header">
                            <div class="order-id">Order #<%= order.id %></div>
                            <div class="order-time"><%= new Date(order.createdAt).toLocaleString() %></div>
                        </div>
                        
                        <div class="order-details">
                            <div class="detail-item">
                                <div class="detail-label">Customer</div>
                                <div class="detail-value"><%= order.customerName %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Table</div>
                                <div class="detail-value"><%= order.tableNumber || 'N/A' %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Type</div>
                                <div class="detail-value"><%= order.orderType %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Status</div>
                                <div class="detail-value">
                                    <span class="status-badge status-<%= order.status %>">
                                        <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                                    </span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Special Instructions / Notes - RED AND BOLD -->
                        <% if (order.notes && order.notes.trim()) { %>
                        <div class="order-notes">
                            <h4>‚ö†Ô∏è SPECIAL INSTRUCTIONS</h4>
                            <div class="order-notes-content"><%= order.notes %></div>
                        </div>
                        <% } %>
                        
                        <div class="order-items">
                            <h4>Items (<%= order.items.length %>)</h4>
                            <div class="item-list">
                                <% order.items.forEach(item => { %>
                                <div class="item">
                                    <div class="item-name"><%= translate(item.name) %></div>
                                    <div class="item-qty">Qty: <%= item.qty || item.quantity || 1 %></div>
                                </div>
                                <% }); %>
                            </div>
                        </div>
                        
                        <div class="order-actions">
                            <button class="btn btn-success" onclick="updateOrderStatus(<%= order.id %>, 'confirmed')">Confirm Order</button>
                            <button class="btn btn-danger" onclick="updateOrderStatus(<%= order.id %>, 'cancelled')">Cancel Order</button>
                        </div>
                    </div>
                    <% }); %>
                <% } %>
            </div>

            <div class="orders-section">
                <h3>‚úÖ Confirmed Orders</h3>
                <% if (confirmedOrders.length === 0) { %>
                    <div style="text-align: center; padding: 40px; color: #6b7280;">
                        <h3>No confirmed orders</h3>
                        <p>Confirmed orders will appear here</p>
                    </div>
                <% } else { %>
                    <% confirmedOrders.forEach(order => { %>
                    <div class="order-card">
                        <div class="order-header">
                            <div class="order-id">Order #<%= order.id %></div>
                            <div class="order-time"><%= new Date(order.createdAt).toLocaleString() %></div>
                        </div>
                        
                        <div class="order-details">
                            <div class="detail-item">
                                <div class="detail-label">Customer</div>
                                <div class="detail-value"><%= order.customerName %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Table</div>
                                <div class="detail-value"><%= order.tableNumber || 'N/A' %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Type</div>
                                <div class="detail-value"><%= order.orderType %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Status</div>
                                <div class="detail-value">
                                    <span class="status-badge status-<%= order.status %>">
                                        <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                                    </span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Special Instructions / Notes - RED AND BOLD -->
                        <% if (order.notes && order.notes.trim()) { %>
                        <div class="order-notes">
                            <h4>‚ö†Ô∏è SPECIAL INSTRUCTIONS</h4>
                            <div class="order-notes-content"><%= order.notes %></div>
                        </div>
                        <% } %>
                        
                        <div class="order-items">
                            <h4>Items (<%= order.items.length %>)</h4>
                            <div class="item-list">
                                <% order.items.forEach(item => { %>
                                <div class="item">
                                    <div class="item-name"><%= translate(item.name) %></div>
                                    <div class="item-qty">Qty: <%= item.qty || item.quantity || 1 %></div>
                                </div>
                                <% }); %>
                            </div>
                        </div>
                        
                        <div class="order-actions">
                            <button class="btn btn-primary" onclick="updateOrderStatus(<%= order.id %>, 'completed')">Mark Complete</button>
                            <button class="btn btn-danger" onclick="updateOrderStatus(<%= order.id %>, 'cancelled')">Cancel Order</button>
                        </div>
                    </div>
                    <% }); %>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        function updateOrderStatus(orderId, status) {
            fetch(`/kitchen/orders/${orderId}/status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Failed to update order status');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating order status');
            });
        }
        
        // Auto-refresh every 30 seconds
        setInterval(() => {
            location.reload();
        }, 30000);
    </script>
</body>
</html>
