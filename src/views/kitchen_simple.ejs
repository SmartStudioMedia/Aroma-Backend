<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kitchen Dashboard - Simple Order Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            padding: 30px;
            background: #f8f9fa;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 12px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            border-left: 4px solid;
        }

        .stat-card.pending { border-left-color: #ffa726; }
        .stat-card.confirmed { border-left-color: #42a5f5; }
        .stat-card.completed { border-left-color: #66bb6a; }
        .stat-card.cancelled { border-left-color: #ef5350; }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #666;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .orders-section {
            padding: 30px;
        }

        .section-title {
            font-size: 1.8rem;
            margin-bottom: 20px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .orders-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .order-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            border: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .order-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .order-card.pending { border-color: #ffa726; }
        .order-card.confirmed { border-color: #42a5f5; }
        .order-card.completed { border-color: #66bb6a; }
        .order-card.cancelled { border-color: #ef5350; }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .order-id {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
        }

        .order-time {
            color: #666;
            font-size: 0.9rem;
        }

        .order-customer {
            font-size: 1.1rem;
            color: #555;
            margin-bottom: 10px;
        }

        .order-items {
            margin-bottom: 15px;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 5px 0;
            border-bottom: 1px solid #eee;
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .item-name {
            color: #333;
        }

        .item-qty {
            color: #666;
            font-weight: bold;
        }

        .order-total {
            font-size: 1.3rem;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 15px;
            text-align: right;
        }

        .order-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            font-size: 0.9rem;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }

        .btn-confirm {
            background: #42a5f5;
            color: white;
        }

        .btn-complete {
            background: #66bb6a;
            color: white;
        }

        .btn-cancel {
            background: #ef5350;
            color: white;
        }

        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .no-orders {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 40px;
            background: #f8f9fa;
            border-radius: 12px;
        }

        .refresh-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: #667eea;
            color: white;
            border: none;
            border-radius: 50px;
            padding: 15px 20px;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

        .refresh-btn:hover {
            background: #5a6fd8;
            transform: translateY(-2px);
        }

        @media (max-width: 768px) {
            .orders-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .header h1 {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üç≥ Kitchen Dashboard</h1>
            <p>Simple Order Management System</p>
        </div>

        <div class="stats-grid">
            <div class="stat-card pending">
                <div class="stat-number" id="pending-count">0</div>
                <div class="stat-label">Pending Orders</div>
            </div>
            <div class="stat-card confirmed">
                <div class="stat-number" id="confirmed-count">0</div>
                <div class="stat-label">Confirmed Orders</div>
            </div>
            <div class="stat-card completed">
                <div class="stat-number" id="completed-count">0</div>
                <div class="stat-label">Completed Orders</div>
            </div>
            <div class="stat-card cancelled">
                <div class="stat-number" id="cancelled-count">0</div>
                <div class="stat-label">Cancelled Orders</div>
            </div>
        </div>

        <div class="orders-section">
            <h2 class="section-title">üìã Pending Orders</h2>
            <div class="orders-grid" id="pending-orders">
                <div class="no-orders">No pending orders</div>
            </div>

            <h2 class="section-title">‚úÖ Confirmed Orders</h2>
            <div class="orders-grid" id="confirmed-orders">
                <div class="no-orders">No confirmed orders</div>
            </div>

            <h2 class="section-title">üéâ Completed Orders</h2>
            <div class="orders-grid" id="completed-orders">
                <div class="no-orders">No completed orders</div>
            </div>

            <h2 class="section-title">‚ùå Cancelled Orders</h2>
            <div class="orders-grid" id="cancelled-orders">
                <div class="no-orders">No cancelled orders</div>
            </div>
        </div>
    </div>

    <button class="refresh-btn" onclick="loadOrders()">üîÑ Refresh</button>

    <script>
        // Simple order management functions
        function updateOrderStatus(orderId, newStatus) {
            console.log(`üîÑ Updating order ${orderId} to ${newStatus}`);
            
            fetch(`/kitchen/orders/${orderId}/status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log(`‚úÖ Order ${orderId} updated to ${newStatus}`);
                    loadOrders(); // Refresh the display
                } else {
                    alert('Failed to update order: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error updating order:', error);
                alert('Error updating order: ' + error.message);
            });
        }

        function loadOrders() {
            console.log('üîÑ Loading orders...');
            
            fetch('/kitchen/orders')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    displayOrders(data.orders);
                    updateStats(data.orders);
                } else {
                    console.error('Failed to load orders:', data.error);
                }
            })
            .catch(error => {
                console.error('Error loading orders:', error);
            });
        }

        function displayOrders(orders) {
            const categories = ['pending', 'confirmed', 'completed', 'cancelled'];
            
            categories.forEach(category => {
                const container = document.getElementById(`${category}-orders`);
                const categoryOrders = orders.filter(order => order.status === category);
                
                if (categoryOrders.length === 0) {
                    container.innerHTML = '<div class="no-orders">No ' + category + ' orders</div>';
                } else {
                    container.innerHTML = categoryOrders.map(order => createOrderCard(order)).join('');
                }
            });
        }

        function createOrderCard(order) {
            const itemsHtml = order.items.map(item => `
                <div class="order-item">
                    <span class="item-name">${item.name}</span>
                    <span class="item-qty">x${item.qty || item.quantity || 1}</span>
                </div>
            `).join('');

            const actionsHtml = getOrderActions(order);

            return `
                <div class="order-card ${order.status}">
                    <div class="order-header">
                        <div class="order-id">#${order.id}</div>
                        <div class="order-time">${new Date(order.createdAt).toLocaleTimeString()}</div>
                    </div>
                    <div class="order-customer">üë§ ${order.customerName}</div>
                    <div class="order-items">${itemsHtml}</div>
                    <div class="order-total">‚Ç¨${(order.total || 0).toFixed(2)}</div>
                    <div class="order-actions">${actionsHtml}</div>
                </div>
            `;
        }

        function getOrderActions(order) {
            let actions = '';
            
            if (order.status === 'pending') {
                actions += `<button class="btn btn-confirm" onclick="updateOrderStatus(${order.id}, 'confirmed')">‚úÖ Confirm</button>`;
                actions += `<button class="btn btn-cancel" onclick="updateOrderStatus(${order.id}, 'cancelled')">‚ùå Cancel</button>`;
            } else if (order.status === 'confirmed') {
                actions += `<button class="btn btn-complete" onclick="updateOrderStatus(${order.id}, 'completed')">üéâ Complete</button>`;
                actions += `<button class="btn btn-cancel" onclick="updateOrderStatus(${order.id}, 'cancelled')">‚ùå Cancel</button>`;
            } else if (order.status === 'completed') {
                actions += `<button class="btn" disabled>‚úÖ Completed</button>`;
            } else if (order.status === 'cancelled') {
                actions += `<button class="btn" disabled>‚ùå Cancelled</button>`;
            }
            
            return actions;
        }

        function updateStats(orders) {
            const stats = {
                pending: orders.filter(o => o.status === 'pending').length,
                confirmed: orders.filter(o => o.status === 'confirmed').length,
                completed: orders.filter(o => o.status === 'completed').length,
                cancelled: orders.filter(o => o.status === 'cancelled').length
            };

            Object.keys(stats).forEach(status => {
                document.getElementById(`${status}-count`).textContent = stats[status];
            });
        }

        // Auto-refresh every 30 seconds
        setInterval(loadOrders, 30000);

        // Load orders on page load
        document.addEventListener('DOMContentLoaded', loadOrders);
    </script>
</body>
</html>
