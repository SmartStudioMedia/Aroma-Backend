<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AROMA Restaurant - Clients Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .header h1 {
            color: #2d3748;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .nav-tabs {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .nav-tab {
            padding: 12px 24px;
            background: #4f46e5;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .nav-tab:hover {
            background: #3730a3;
            transform: translateY(-2px);
        }
        
        .nav-tab.active {
            background: #f59e0b;
        }
        
        /* Controls Section */
        .controls-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .controls-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .control-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        
        .control-group label {
            font-weight: 600;
            color: #374151;
            font-size: 0.9rem;
            margin-bottom: 4px;
        }
        
        .control-group select,
        .control-group input {
            padding: 10px 12px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            background: white;
        }
        
        .control-group select:focus,
        .control-group input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .search-group {
            grid-column: 1 / -1;
        }
        
        .search-group input {
            width: 100%;
            padding: 12px 16px;
            font-size: 1rem;
        }
        
        .controls-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            flex-wrap: wrap;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #e5e7eb;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        
        .btn-primary {
            background: #3b82f6;
            color: white;
        }
        
        .btn-primary:hover {
            background: #2563eb;
        }
        
        .btn-secondary {
            background: #6b7280;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #4b5563;
        }
        
        .btn-success {
            background: #10b981;
            color: white;
        }
        
        .btn-success:hover {
            background: #059669;
        }
        
        .btn-danger {
            background: #ef4444;
            color: white;
        }
        
        .btn-danger:hover {
            background: #dc2626;
        }
        
        /* Clients Display */
        .clients-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .clients-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .clients-count {
            font-size: 1.1rem;
            color: #6b7280;
        }
        
        .client-card {
            background: #f8fafc;
            border: 1px solid #e2e8f0;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }
        
        .client-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }
        
        .client-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .client-name {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2d3748;
        }
        
        .client-date {
            color: #6b7280;
            font-size: 0.9rem;
        }
        
        .client-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .detail-item {
            background: white;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }
        
        .detail-label {
            font-size: 0.8rem;
            color: #6b7280;
            font-weight: 500;
            margin-bottom: 4px;
        }
        
        .detail-value {
            font-size: 1rem;
            color: #1f2937;
            font-weight: 600;
        }
        
        .marketing-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .marketing-consent {
            background: #d1fae5;
            color: #065f46;
        }
        
        .marketing-no-consent {
            background: #fee2e2;
            color: #991b1b;
        }
        
        .client-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .no-clients {
            text-align: center;
            padding: 60px 20px;
            color: #6b7280;
        }
        
        .no-clients h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }
        
        .no-clients p {
            font-size: 1rem;
        }
        
        /* Stats Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #3b82f6;
            margin-bottom: 10px;
        }
        
        .stat-label {
            color: #6b7280;
            font-size: 1rem;
            font-weight: 500;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .controls-grid {
                grid-template-columns: 1fr;
            }
            
            .control-group {
                width: 100%;
            }
            
            .control-group select,
            .control-group input {
                width: 100%;
            }
            
            .client-details {
                grid-template-columns: 1fr;
            }
            
            .client-actions {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>👥 Clients Management</h1>
            <div class="nav-tabs">
                <a href="/admin" class="nav-tab">Dashboard</a>
                <a href="/admin/items" class="nav-tab">Menu Items</a>
                <a href="/admin/categories" class="nav-tab">Categories</a>
                <a href="/admin/orders" class="nav-tab">Orders</a>
                <a href="/admin/clients" class="nav-tab active">Clients</a>
                <a href="/admin/qr" class="nav-tab">QR Codes</a>
                <a href="/admin/settings" class="nav-tab">Settings</a>
            </div>
        </div>

        <!-- Stats Section -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="totalClients">0</div>
                <div class="stat-label">📧 Total Clients</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="marketingClients">0</div>
                <div class="stat-label">✅ Marketing Consent</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="recentClients">0</div>
                <div class="stat-label">🆕 This Week</div>
            </div>
        </div>

        <!-- Controls Section -->
        <div class="controls-section">
            <h2 style="margin-bottom: 20px; color: #374151;">🔍 Filter & Search Clients</h2>
            
            <!-- Filter Controls -->
            <div class="controls-grid">
                <div class="control-group">
                    <label for="marketingFilter">📊 Marketing Consent</label>
                    <select id="marketingFilter" onchange="filterClients()">
                        <option value="all">All Clients</option>
                        <option value="consent">✅ With Consent</option>
                        <option value="no-consent">❌ No Consent</option>
                    </select>
                </div>
                
                <div class="control-group">
                    <label for="sortBy">🔄 Sort By</label>
                    <select id="sortBy" onchange="sortClients()">
                        <option value="newest">🆕 Newest First</option>
                        <option value="oldest">📅 Oldest First</option>
                        <option value="name">👤 Name A-Z</option>
                        <option value="email">📧 Email A-Z</option>
                    </select>
                </div>
                
                <div class="search-group">
                    <label for="searchClients">🔍 Search Clients</label>
                    <input type="text" id="searchClients" placeholder="Search by name or email..." onkeyup="searchClients()">
                </div>
            </div>
            
            <div class="controls-actions">
                <button class="btn btn-secondary" onclick="clearFilters()">🧹 Clear All Filters</button>
                <button class="btn btn-success" onclick="exportClients()">📊 Export All Clients</button>
                <button class="btn btn-primary" onclick="exportMarketingClients()">📧 Export Marketing List</button>
            </div>
        </div>

        <!-- Clients Display -->
        <div class="clients-container">
            <div class="clients-header">
                <h2 id="clientsTitle">👥 All Clients</h2>
                <div class="clients-count" id="clientsCount">Loading...</div>
            </div>
            
            <div id="clientsList">
                <% if (!clients || clients.length === 0) { %>
                    <div class="no-clients">
                        <h3>No clients found</h3>
                        <p>There are no clients in the database yet.</p>
                    </div>
                <% } else { %>
                    <% clients.forEach(client => { %>
                    <div class="client-card" data-client-id="<%= client.id %>" data-name="<%= client.name %>" data-email="<%= client.email %>" data-marketing="<%= client.marketingConsent %>" data-date="<%= new Date(client.createdAt).toISOString() %>">
                        <div class="client-header">
                            <div class="client-name"><%= client.name %></div>
                            <div class="client-date"><%= new Date(client.createdAt).toLocaleDateString() %></div>
                        </div>
                        
                        <div class="client-details">
                            <div class="detail-item">
                                <div class="detail-label">Email</div>
                                <div class="detail-value"><%= client.email %></div>
                            </div>
                            <% if (client.phone) { %>
                            <div class="detail-item">
                                <div class="detail-label">Phone</div>
                                <div class="detail-value"><%= client.phone %></div>
                            </div>
                            <% } %>
                            <div class="detail-item">
                                <div class="detail-label">Marketing Consent</div>
                                <div class="detail-value">
                                    <span class="marketing-badge <%= client.marketingConsent ? 'marketing-consent' : 'marketing-no-consent' %>">
                                        <%= client.marketingConsent ? 'Consent Given' : 'No Consent' %>
                                    </span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Total Orders</div>
                                <div class="detail-value"><%= client.totalOrders || 0 %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Total Reservations</div>
                                <div class="detail-value"><%= client.totalReservations || 0 %></div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Total Spent</div>
                                <div class="detail-value">€<%= (client.totalSpent || 0).toFixed(2) %></div>
                            </div>
                        </div>
                        
                        <div class="client-actions">
                            <button class="btn btn-danger" onclick="deleteClient(<%= client.id %>)">🗑️ Delete Client</button>
                        </div>
                    </div>
                    <% }); %>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        let allClients = [];
        let filteredClients = [];
        
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            allClients = Array.from(document.querySelectorAll('.client-card')).map(card => ({
                element: card,
                id: card.dataset.clientId,
                name: card.dataset.name,
                email: card.dataset.email,
                marketing: card.dataset.marketing === 'true',
                date: new Date(card.dataset.date)
            }));
            filteredClients = [...allClients];
            updateClientsDisplay();
            updateStats();
        });
        
        // Filter functions
        function filterClients() {
            const marketingFilter = document.getElementById('marketingFilter').value;
            
            filteredClients = allClients.filter(client => {
                if (marketingFilter === 'consent') {
                    return client.marketing;
                } else if (marketingFilter === 'no-consent') {
                    return !client.marketing;
                }
                return true;
            });
            
            updateClientsDisplay();
        }
        
        function searchClients() {
            const searchTerm = document.getElementById('searchClients').value.toLowerCase();
            
            if (searchTerm === '') {
                filterClients();
                return;
            }
            
            filteredClients = allClients.filter(client => {
                const clientElement = client.element;
                const clientText = clientElement.textContent.toLowerCase();
                return clientText.includes(searchTerm);
            });
            
            updateClientsDisplay();
        }
        
        function sortClients() {
            const sortBy = document.getElementById('sortBy').value;
            
            filteredClients.sort((a, b) => {
                switch(sortBy) {
                    case 'newest':
                        return b.date - a.date;
                    case 'oldest':
                        return a.date - b.date;
                    case 'name':
                        return a.name.localeCompare(b.name);
                    case 'email':
                        return a.email.localeCompare(b.email);
                    default:
                        return 0;
                }
            });
            
            updateClientsDisplay();
        }
        
        function clearFilters() {
            document.getElementById('marketingFilter').value = 'all';
            document.getElementById('sortBy').value = 'newest';
            document.getElementById('searchClients').value = '';
            
            filteredClients = [...allClients];
            updateClientsDisplay();
        }
        
        function updateClientsDisplay() {
            const clientsList = document.getElementById('clientsList');
            const clientsCount = document.getElementById('clientsCount');
            const clientsTitle = document.getElementById('clientsTitle');
            
            // Hide all clients
            allClients.forEach(client => {
                client.element.style.display = 'none';
            });
            
            // Show filtered clients
            filteredClients.forEach(client => {
                client.element.style.display = 'block';
            });
            
            // Update counts and title
            clientsCount.textContent = `${filteredClients.length} clients found`;
            clientsTitle.textContent = `👥 ${filteredClients.length === allClients.length ? 'All' : 'Filtered'} Clients`;
        }
        
        function updateStats() {
            const totalClients = allClients.length;
            const marketingClients = allClients.filter(client => client.marketing).length;
            const weekAgo = new Date();
            weekAgo.setDate(weekAgo.getDate() - 7);
            const recentClients = allClients.filter(client => client.date >= weekAgo).length;
            
            document.getElementById('totalClients').textContent = totalClients;
            document.getElementById('marketingClients').textContent = marketingClients;
            document.getElementById('recentClients').textContent = recentClients;
        }
        
        function exportClients() {
            const csvContent = [
                ['Name', 'Email', 'Marketing Consent', 'Total Orders', 'Total Spent', 'Date Added'],
                ...filteredClients.map(client => {
                    const clientElement = client.element;
                    return [
                        client.name,
                        client.email,
                        client.marketing ? 'Yes' : 'No',
                        clientElement.querySelector('.detail-item:nth-child(3) .detail-value').textContent,
                        clientElement.querySelector('.detail-item:nth-child(4) .detail-value').textContent,
                        client.date.toLocaleDateString()
                    ];
                })
            ].map(row => row.join(',')).join('\n');
            
            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `clients_${new Date().toISOString().split('T')[0]}.csv`;
            a.click();
            window.URL.revokeObjectURL(url);
        }
        
        function exportMarketingClients() {
            const marketingClients = filteredClients.filter(client => client.marketing);
            
            if (marketingClients.length === 0) {
                alert('No clients with marketing consent found!');
                return;
            }
            
            const csvContent = [
                ['Name', 'Email', 'Date Added'],
                ...marketingClients.map(client => [
                    client.name,
                    client.email,
                    client.date.toLocaleDateString()
                ])
            ].map(row => row.join(',')).join('\n');
            
            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `marketing_clients_${new Date().toISOString().split('T')[0]}.csv`;
            a.click();
            window.URL.revokeObjectURL(url);
        }
        
        function deleteClient(clientId) {
            if (!confirm('Are you sure you want to delete this client? This action cannot be undone.')) {
                return;
            }
            
            fetch(`/admin/clients/${clientId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Client deleted successfully!');
                    location.reload();
                } else {
                    alert('Failed to delete client: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting client');
            });
        }
    </script>
</body>
</html>

