<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AROMA Restaurant - Categories Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .header h1 {
            color: #2d3748;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .nav-tabs {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .nav-tab {
            padding: 12px 24px;
            background: #4f46e5;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .nav-tab:hover {
            background: #3730a3;
            transform: translateY(-2px);
        }
        
        .nav-tab.active {
            background: #059669;
        }
        
        .categories-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .categories-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 15px;
        }
        
        .categories-header h3 {
            font-size: 1.5rem;
            color: #2d3748;
        }
        
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }
        
        .btn-primary {
            background: #4f46e5;
            color: white;
        }
        
        .btn-primary:hover {
            background: #3730a3;
            transform: translateY(-2px);
        }
        
        .btn-success {
            background: #059669;
            color: white;
        }
        
        .btn-danger {
            background: #dc2626;
            color: white;
        }
        
        .btn-sm {
            padding: 8px 16px;
            font-size: 0.875rem;
        }
        
        .categories-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .category-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid #e5e7eb;
            text-align: center;
        }
        
        .category-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .category-icon {
            font-size: 3rem;
            margin-bottom: 15px;
            display: block;
        }
        
        .category-name {
            font-size: 1.5rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 10px;
        }
        
        .category-sort {
            color: #6b7280;
            font-size: 0.875rem;
            margin-bottom: 15px;
        }
        
        .category-stats {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
            padding: 15px;
            background: #f9fafb;
            border-radius: 8px;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-number {
            font-size: 1.25rem;
            font-weight: 700;
            color: #059669;
        }
        
        .stat-label {
            font-size: 0.75rem;
            color: #6b7280;
            text-transform: uppercase;
        }
        
        .category-actions {
            display: flex;
            gap: 10px;
            justify-content: center;
            flex-wrap: wrap;
        }
        
        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
            margin-bottom: 15px;
            display: inline-block;
        }
        
        .status-active {
            background: #d1fae5;
            color: #065f46;
        }
        
        .status-inactive {
            background: #fee2e2;
            color: #991b1b;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }
        
        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e5e7eb;
        }
        
        .modal-header h2 {
            color: #1f2937;
            font-size: 1.5rem;
        }
        
        .close {
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            transition: color 0.3s ease;
        }
        
        .close:hover {
            color: #000;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #374151;
        }
        
        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }
        
        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #4f46e5;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .checkbox-group input[type="checkbox"] {
            width: auto;
            margin: 0;
        }
        
        .icon-preview {
            font-size: 2rem;
            text-align: center;
            margin: 10px 0;
            padding: 15px;
            background: #f9fafb;
            border-radius: 8px;
        }
        
        @media (max-width: 768px) {
            .categories-grid {
                grid-template-columns: 1fr;
            }
            
            .categories-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>📂 Categories Management</h1>
            <p>Organize your menu into categories</p>
            <div class="nav-tabs">
                <a href="/admin" class="nav-tab">Dashboard</a>
                <a href="/admin/orders" class="nav-tab">Orders</a>
                <a href="/admin/items" class="nav-tab">Menu Items</a>
                <a href="/admin/categories" class="nav-tab active">Categories</a>
                <a href="/admin/clients" class="nav-tab">Clients</a>
                <a href="/admin/qr" class="nav-tab">QR Codes</a>
                <a href="/admin/settings" class="nav-tab">Settings</a>
            </div>
        </div>

        <div class="categories-container">
            <div class="categories-header">
                <h3>Menu Categories</h3>
                <button class="btn btn-primary" onclick="openAddCategoryModal()">+ Add New Category</button>
            </div>

            <div class="categories-grid">
                <% categories.forEach(category => { %>
                <div class="category-card">
                    <span class="category-icon"><%= category.icon %></span>
                    <div class="category-name"><%= translate(category.name) %></div>
                    <div class="category-sort">Sort Order: <%= category.sort_order %></div>
                    
                    <span class="status-badge status-<%= category.active ? 'active' : 'inactive' %>">
                        <%= category.active ? 'Active' : 'Inactive' %>
                    </span>
                    
                    <div class="category-stats">
                        <div class="stat-item">
                            <div class="stat-number">
                                <% const itemCount = items.filter(item => item.category_id === category.id).length; %>
                                <%= itemCount %>
                            </div>
                            <div class="stat-label">Items</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">
                                <% const activeItemCount = items.filter(item => item.category_id === category.id && item.active).length; %>
                                <%= activeItemCount %>
                            </div>
                            <div class="stat-label">Active</div>
                        </div>
                    </div>
                    
                    <div class="category-actions">
                        <button class="btn btn-primary btn-sm" onclick="editCategory(<%= category.id %>)">Edit</button>
                        <button class="btn btn-<%= category.active ? 'danger' : 'success' %> btn-sm" onclick="toggleCategoryStatus(<%= category.id %>, <%= !category.active %>)">
                            <%= category.active ? 'Deactivate' : 'Activate' %>
                        </button>
                        <button class="btn btn-danger btn-sm" onclick="deleteCategory(<%= category.id %>)">Delete</button>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>
    </div>

    <!-- Add/Edit Category Modal -->
    <div id="categoryModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modalTitle">Add New Category</h2>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <form id="categoryForm">
                <input type="hidden" id="categoryId" value="">
                
                <div class="form-group">
                    <label for="categoryName">Category Name *</label>
                    <input type="text" id="categoryName" required>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="categoryIcon">Icon (Emoji) *</label>
                        <input type="text" id="categoryIcon" placeholder="🍔" maxlength="2" required>
                        <div class="icon-preview" id="iconPreview">🍔</div>
                    </div>
                    <div class="form-group">
                        <label for="categorySort">Sort Order</label>
                        <input type="number" id="categorySort" min="1" value="<%= categories.length + 1 %>">
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="checkbox-group">
                        <input type="checkbox" id="categoryActive" checked>
                        <label for="categoryActive">Active (visible to customers)</label>
                    </div>
                </div>
                
                <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px;">
                    <button type="button" class="btn" onclick="closeModal()" style="background: #6b7280; color: white;">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Category</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let currentCategoryId = null;
        
        function openAddCategoryModal() {
            currentCategoryId = null;
            document.getElementById('modalTitle').textContent = 'Add New Category';
            document.getElementById('categoryForm').reset();
            document.getElementById('categoryActive').checked = true;
            document.getElementById('categorySort').value = <%= categories.length + 1 %>;
            document.getElementById('iconPreview').textContent = '🍔';
            document.getElementById('categoryModal').style.display = 'block';
        }
        
        function editCategory(categoryId) {
            currentCategoryId = categoryId;
            document.getElementById('modalTitle').textContent = 'Edit Category';
            
            // Find the category data
            var categories = <%- JSON.stringify(categories) %>;
            var category = null;
            for (var i = 0; i < categories.length; i++) {
                if (categories[i].id === categoryId) {
                    category = categories[i];
                    break;
                }
            }
            
            if (category) {
                document.getElementById('categoryId').value = category.id;
                // Handle multilingual category name for editing
                var categoryName = '';
                if (category.name && typeof category.name === 'object' && category.name.en) {
                    categoryName = category.name.en;
                } else if (typeof category.name === 'string') {
                    categoryName = category.name;
                } else {
                    categoryName = '';
                }
                document.getElementById('categoryName').value = categoryName;
                document.getElementById('categoryIcon').value = category.icon || '';
                document.getElementById('categorySort').value = category.sort_order || '';
                document.getElementById('categoryActive').checked = category.active;
                document.getElementById('iconPreview').textContent = category.icon || '🍔';
            }
            
            document.getElementById('categoryModal').style.display = 'block';
        }
        
        function closeModal() {
            document.getElementById('categoryModal').style.display = 'none';
        }
        
        function toggleCategoryStatus(categoryId, newStatus) {
            if (confirm('Are you sure you want to ' + (newStatus ? 'activate' : 'deactivate') + ' this category?')) {
                fetch('/api/menu/categories/' + categoryId, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        active: newStatus
                    })
                })
                .then(function(response) { return response.json(); })
                .then(function(data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error updating category: ' + data.error);
                    }
                })
                .catch(function(error) {
                    console.error('Error:', error);
                    alert('Error updating category');
                });
            }
        }
        
        function deleteCategory(categoryId) {
            if (confirm('Are you sure you want to delete this category? This action cannot be undone.')) {
                fetch('/api/menu/categories/' + categoryId, {
                    method: 'DELETE'
                })
                .then(function(response) { return response.json(); })
                .then(function(data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error deleting category: ' + data.error);
                    }
                })
                .catch(function(error) {
                    console.error('Error:', error);
                    alert('Error deleting category');
                });
            }
        }
        
        // Icon preview
        document.getElementById('categoryIcon').addEventListener('input', function() {
            var icon = this.value || '🍔';
            document.getElementById('iconPreview').textContent = icon;
        });
        
        document.getElementById('categoryForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            var formData = {
                name: document.getElementById('categoryName').value,
                icon: document.getElementById('categoryIcon').value,
                sort_order: parseInt(document.getElementById('categorySort').value),
                active: document.getElementById('categoryActive').checked
            };
            
            var url = currentCategoryId ? '/api/menu/categories/' + currentCategoryId : '/api/menu/categories';
            var method = currentCategoryId ? 'PUT' : 'POST';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(function(response) { return response.json(); })
            .then(function(data) {
                if (data.success) {
                    alert('Category saved successfully!');
                    location.reload();
                } else {
                    alert('Error saving category: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(function(error) {
                console.error('Error:', error);
                alert('Error saving category: ' + error.message);
            });
        });
        
        // Close modal when clicking outside
        window.onclick = function(event) {
            var modal = document.getElementById('categoryModal');
            if (event.target === modal) {
                closeModal();
            }
        }
    </script>
</body>
</html>
